# This is file is used by sysvinit to determine how to initialise
# the system after initramfs's early initialisation.
# 
# Syntax:  id:runlevels:action:process
# id must be unique and of the lenght 1 to 4
# 
# 
# Standard runlevels: (it is possible to create more runlevels)
#   0     Shutdown
#   1(S)  Single-user				(system maintainance)
#   2     Networkless single-user
#   3     Multi-user				(regular boot with console, which can start graphics)
#   4     Networkless multi-user
#   5     Multi-user with display manager	(regular boot with graphics)
#   6     Reboot
# 



# Select default runlevel, it can be overriden at bootloader time by inserting the runlevel
# in the command line (APPEND property in syslinux) with just the runlevel character.
# You can also skip this to let sysvinit ask the user.
# 
# To set the default runlevel to *, set the following line to:  id:*:initdefault:

id:3:initdefault:

# Default runlevel: 3, multi-user with console and networks but not graphics



# Select command to run when the user presses <control><alternative>delete during initalisation.
# Typically one wants to execute some sort of shutdown either to get into singer-user level or
# reboot the machine.
# 
# To set this action to exection * on any runlevel, set the following line to: ca::ctrlaltdel:*

ca::ctrlaltdel:£{SBIN}/shutdown -t3 -r now

# `£{SBIN}/shutdown -t3 -r now`
# means: reboot immediately and give process a 3 second warning



# Selection first initisation program to execute, it ignores the runlevels field:
# This process will run before any other.
# 
# To select the program or script *, set the following line to:  rc::sysinit:*

rc::sysinit:£{ETC}/rc.sysinit



# Here you can set actions to do depending on power states that uninterruptable power supplies can detect.
# The syntax for the lines is:  id::action:command
# As you see, the runlevels field is ignored. Keep id unique.
# Possible values for the action field is:
# 
#   powerwait:     Execute process when the power goes down, £{SBIN}/init waits for the process's completion
#   powerfail:     powerwait, except that £{SBIN}/init does not wait for the process's completion
#   powerokwait:   Execute process as soon as £{SBIN}/init is informed that the power has been restored
#   powerfailnow:  Execute process when the battery of the UPS is almost empty and the power is failing

pw::powerwait:£{ETC}/rc.power wait
pf::powerfail:£{ETC}/rc.power fail
po::powerokwait:£{ETC}/rc.power okwait
pn::powerfailnow:£{ETC}/rc.power failnow



# If you find some sufficient documentation you can use the actions "ondemand" and "kbdrequest" here.



# Here you can run processes before the runlevel is entered, the syntax for the lines is:  id::action:command
# As you see, the runlevels field is ignored. Keep id unique.
# Possible values for the action field is:
# 
#   bootwait:  Execute during system boot
#   boot:      Execute during system boot, £{SBIN}/init should wait for it to terminate

# There are no standard actions here.





# The remaining portion of this file specifies what to do for the different runlevels,
# each line is of the syntax:  id:runlevels:action:command
# The id field must be unique, runlevels a list of runlevels the line applies to (empty for all),
# command is the command line to execute, and action the behaviour which may be one of the following:
# 
#   respawn:  restart whenever it terminates
#   wait:     run once, £{SBIN}/init should wait for it to terminate
#   once:     run once
# 
# You are advised not to change the id fields so that automatic configurators can understand the configuration.



# Processes for starting runlevel specific modules and daemons

rs:S12:wait:£{ETC}/rc.single
rm:345:wait:£{ETC}/rc.multi
rh:06:wait:£{ETC}/rc.shutdown
su:S:wait:£{SBIN}/sulogin -p



# Start virtual console for user interaction so you can use you computer
c1:345:respawn:£{SBIN}/agetty -8 -s 38400 tty1 linux
c2:345:respawn:£{SBIN}/agetty -8 -s 38400 tty2 linux
c3:345:respawn:£{SBIN}/agetty -8 -s 38400 tty3 linux
c4:345:respawn:£{SBIN}/agetty -8 -s 38400 tty4 linux
c5:345:respawn:£{SBIN}/agetty -8 -s 38400 tty5 linux
c6:345:respawn:£{SBIN}/agetty -8 -s 38400 tty6 linux
c7:345:respawn:£{SBIN}/agetty -8 -s 38400 tty7 linux
c8:345:respawn:£{SBIN}/agetty -8 -s 38400 tty8 linux
c9:345:respawn:£{SBIN}/agetty -8 -s 38400 tty9 linux
c10:345:respawn:£{SBIN}/agetty -8 -s 38400 tty10 linux
c11:345:respawn:£{SBIN}/agetty -8 -s 38400 tty11 linux
c12:345:respawn:£{SBIN}/agetty -8 -s 38400 tty12 linux
c13:345:respawn:£{SBIN}/agetty -8 -s 38400 tty13 linux
c14:345:respawn:£{SBIN}/agetty -8 -s 38400 tty14 linux
c15:345:respawn:£{SBIN}/agetty -8 -s 38400 tty15 linux
c16:345:respawn:£{SBIN}/agetty -8 -s 38400 tty16 linux
c17:345:respawn:£{SBIN}/agetty -8 -s 38400 tty17 linux
c18:345:respawn:£{SBIN}/agetty -8 -s 38400 tty18 linux
c19:345:respawn:£{SBIN}/agetty -8 -s 38400 tty19 linux
c20:345:respawn:£{SBIN}/agetty -8 -s 38400 tty20 linux


# Start serial virtual console for KVM and others VMs, uncomment to enable
#s0:345:respawn:£{SBIN}/agetty -8 -s 9600 ttyS0 linux


# Start hypervisor virtual console for Xen and KVM, uncomment to enable
#h0:345:respawn:£{SBIN}/agetty -8 -s 38400 hvc0 linux



# Start login manager, here are some examples, keep only the one you which to use uncommented

x:5:respawn:£{USR}£{BIN}/xdm -nodaemon
#x:5:respawn:£{USR}£{SBIN}/gdm -nodaemon
#x:5:respawn:£{USR}£{BIN}/kdm -nodaemon
#x:5:respawn:£{USR}£{BIN}/slim >£{DEV}/null 2>&1


