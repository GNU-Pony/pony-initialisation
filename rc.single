#!/bin/bash
#
# /etc/rc.single: Single-user startup script.
#

. /etc/rc.conf
. /etc/rc.d/functions

export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

run_hook single_start

if [[ $PREVLEVEL != N ]]; then
	kill_everything single
	
	status "Starting UDev Daemon" udevd --daemon
	
	run_hook single_udevlaunched

	# Trigger udev uevents
	stat_busy "Triggering UDev uevents"
		udevadm trigger --action=add --type=subsystems
		udevadm trigger --action=add --type=devices
	stat_done

	# Wait for udev uevents
	status "Waiting for UDev uevents to be processed" \
		udevadm settle --quiet --timeout=${UDEV_TIMEOUT:-30}

	run_hook single_udevsettled

	# try syslog-NG first, then fall back to good ol' syslogd
	if [[ -x /etc/rc.d/syslog-ng ]]; then
		/etc/rc.d/syslog-ng start
	elif [[ -x /etc/rc.d/syslogd ]]; then
		/etc/rc.d/syslogd start
		[[ -x /etc/rc.d/klogd ]] && /etc/rc.d/klogd start
	fi
fi

run_hook single_end

if [[ $RUNLEVEL = 1 ]]; then
	printsep
	printhl "Entering single-user mode..."
	# make sure /dev/initctl is in place
	kill -HUP 1
	exec init -t1 S
fi

if [[ -f /run/bootlogd.pid ]]; then
	touch /var/log/boot
	kill $(< /run/bootlogd.pid)
	rm -f /run/bootlogd.pid
	sed -i -r -e 's/\^\[\[[0-9]?;?[0-9]?[0-9]?;?[0-9]?[0-9]?[ms]//g' \
                  -e 's/\^\[(\[151|%)G//g' /var/log/boot
fi

# End of file
# vim: set ts=2 sw=2 noet:
